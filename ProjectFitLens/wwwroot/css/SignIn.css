*,
::after,
::before {
    box-sizing: border-box;
}



.form {
    width: 300px;
    padding: 64px 15px 24px;
    margin: 0 auto;
}

.form .control {
    margin: 0 0 24px;
}

.form .control input,
.form .control select {
    width: 100%;
    padding: 14px 16px;
    border: 0;
    background: transparent;
    color: #fff;
    font-family: monospace, serif;
    letter-spacing: 0.05em;
    font-size: 16px;
    transition: background 0.3s ease; /* Transition for background */
}

.form .control input:hover,
.form .control input:focus,
.form .control select:hover,
.form .control select:focus {
    outline: none;
    border: 0;
    background: rgba(255, 255, 255, 0.1); /* Light background on hover */
}

.form .btn {
    width: 100%;
    display: block;
    padding: 14px 16px;
    background: transparent;
    outline: none;
    border: 0;
    color: #fff;
    letter-spacing: 0.1em;
    font-weight: bold;
    font-family: monospace;
    font-size: 16px;
}

.block-cube {
    position: relative;
}

.block-cube .bg-top {
    position: absolute;
    height: 10px;
    background: rgba(207, 88, 88, 0.55);
    background: linear-gradient(90deg, rgb(246, 6, 6) 0%, #c32e2e 37%, rgba(207, 88, 88, 0.55) 94%);
    bottom: 100%;
    left: 5px;
    right: -5px;
    transform: skew(-45deg, 0);
    margin: 0;
}

.block-cube .bg-top .bg-inner {
    bottom: 0;
}

.block-cube .bg {
    position: absolute;
    left: 0;
    top: 0;
    right: 0;
    bottom: 0;
    background: rgba(207, 88, 88, 0.55);
    background: linear-gradient(90deg, rgb(246, 6, 6) 0%, #c32e2e 37%, rgba(207, 88, 88, 0.55) 94%);
}

.block-cube .bg-right {
    position: absolute;
    background: #020024;
    background:  rgba(207, 88, 88, 0.55);
    top: -5px;
    z-index: 0;
    bottom: 5px;
    width: 10px;
    left: 100%;
    transform: skew(0, -45deg);
}

.block-cube .bg-right .bg-inner {
    left: 0;
}

.block-cube .bg .bg-inner {
    transition: all 0.2s ease-in-out;
}

.block-cube .bg-inner {
    background: #212121;
    position: absolute;
    left: 2px;
    top: 2px;
    right: 2px;
    bottom: 2px;
}

.block-cube .text {
    position: relative;
    z-index: 2;
}

.block-cube.block-input input,
.block-cube.block-input select {
    position: relative;
    z-index: 2;
}

.block-cube.block-input select {
    background: transparent;
    cursor: pointer;
    appearance: none; /* Remove default styling */
}

.block-cube.block-input select:focus,
.block-cube.block-input select:hover {
    background: rgba(255, 255, 255, 0.2); /* Change background on hover */
}

.block-cube.block-input:focus .bg-top,
.block-cube.block-input:focus .bg-right,
.block-cube.block-input:focus .bg,
.block-cube.block-input:hover .bg-top,
.block-cube.block-input:hover .bg-right,
.block-cube.block-input:hover .bg {
    background: rgba(255, 255, 255, 0.8);
}

.block-cube.block-input .bg-top,
.block-cube.block-input .bg-right,
.block-cube.block-input .bg {
    background: rgba(255, 255, 255, 0.5);
    transition: background 0.2s ease-in-out;
}




















.newsletter-checkbox {
    display: flex;
    align-items: center;
    cursor: pointer;
    color: #fff; /* Text color */
    font-family: monospace, serif;
    font-size: 16px;
}

.newsletter-checkbox input {
    display: none; /* Hide the default checkbox */
}

.newsletter-checkbox .checkmark {
    width: 20px;
    height: 20px;
    border: 2px solid #838383; /* Border color */
    background-color: #212121; /* Background color when unchecked */
    margin-right: 10px;
    position: relative;
    border-radius: 4px; /* Rounded corners */
    transition: background-color 0.2s, border-color 0.2s; /* Smooth transition */
}

/* Change background and border color when checked */
.newsletter-checkbox input:checked + .checkmark {
    background-color: #FF7E7E; /* Background color when checked */
    border-color: #fff; /* Change border color */
}

/* Create a checkmark inside the box */
.newsletter-checkbox .checkmark::after {
    content: "";
    position: absolute;
    display: none; /* Hide by default */
}

.newsletter-checkbox input:checked + .checkmark::after {
    display: block; /* Show when checked */
}

.newsletter-checkbox .checkmark::after {
    left: 7px; /* Position the checkmark */
    top: 2px;
    width: 6px;
    height: 12px;
    border: solid white; /* Checkmark color */
    border-width: 0 2px 2px 0; /* Create a checkmark shape */
    transform: rotate(45deg); /* Rotate to create a checkmark */
}

/* Add hover effect */
.newsletter-checkbox:hover .checkmark {
    background-color: rgba(255, 255, 255, 0.2); /* Change background on hover */
}

/* Prevent block styles from affecting the checkbox */
.control.block-cube.block-input .newsletter-checkbox .checkmark {
    background-color: transparent; /* Ensure no background from block styles */
    border: 2px solid #FF7E7E; /* Set border explicitly */
}





/* Hover effect for the login button */
.btn.block-cube:hover .bg-top,
.btn.block-cube:hover .bg-right,
.btn.block-cube:hover .bg {
    background: rgba(255, 255, 255, 0.7); /* Lighten background slightly */
    box-shadow: 0px 4px 10px rgba(255, 255, 255, 0.3); /* Subtle white shadow */
    transition: background 0.2s ease, box-shadow 0.2s ease;
}

/* Keep button's original style */
.btn.block-cube .bg-top,
.btn.block-cube .bg-right,
.btn.block-cube .bg {
    background: rgba(207, 88, 88, 0.55);
    transition: background 0.2s ease;
}

/* Text color change on hover */
.btn.block-cube:hover .text {
    color: #FF7E7E; /* Set to a contrasting color on hover */
}




















